plugins {
    id "java-library"
    id "maven-publish"
}

group = "dev.bxlab.libs"
version = project.findProperty('version') ?: '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

ext {
    mockitoVersion = "5.17.0"
}

dependencies {
    testImplementation platform("org.junit:junit-bom:5.12.2")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    // Mockito
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
}

test {
    useJUnitPlatform()
    jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains("mockito-core") }}"
}

publishing {
    publications {
        create("library", MavenPublication) {
            from components.java

            pom {
                name = "ResultSet Mapper"
                description = "A lightweight Java library for mapping JDBC ResultSet to Java objects"
                url = "https://github.com/bxacosta/resultset-mapper"

                licenses {
                    license {
                        name = "MIT License"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }

                developers {
                    developer {
                        id = "bxacosta"
                        name = "Bryan Acosta"
                        email = "hello@bxlab.dev"
                    }
                }

                scm {
                    url = "https://github.com/bxacosta/resultset-mapper"
                    connection = "scm:git:https://github.com/bxacosta/resultset-mapper.git"
                    developerConnection = "scm:git:ssh://git@github.com/bxacosta/resultset-mapper.git"
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitLab"
            url = uri("https://gitlab.com/api/v4/projects/70108742/packages/maven")
            credentials(HttpHeaderCredentials) {
                name = "Deploy-Token"
                value = System.getenv("GITLAB_DEPLOY_TOKEN") ?: project.findProperty("gitlabDeployToken")
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}